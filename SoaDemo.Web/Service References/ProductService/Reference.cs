//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoaDemo.Web.ProductService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetCog", ReplyAction="http://tempuri.org/IProductService/GetCogResponse")]
        SoaDemo.Services.Common.DataContracts.Product GetCog(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetCog", ReplyAction="http://tempuri.org/IProductService/GetCogResponse")]
        System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> GetCogAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SaveCog", ReplyAction="http://tempuri.org/IProductService/SaveCogResponse")]
        SoaDemo.Services.Common.DataContracts.Product SaveCog(SoaDemo.Services.Common.DataContracts.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SaveCog", ReplyAction="http://tempuri.org/IProductService/SaveCogResponse")]
        System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> SaveCogAsync(SoaDemo.Services.Common.DataContracts.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteCog", ReplyAction="http://tempuri.org/IProductService/DeleteCogResponse")]
        bool DeleteCog(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteCog", ReplyAction="http://tempuri.org/IProductService/DeleteCogResponse")]
        System.Threading.Tasks.Task<bool> DeleteCogAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSprocket", ReplyAction="http://tempuri.org/IProductService/GetSprocketResponse")]
        SoaDemo.Services.Common.DataContracts.Product GetSprocket(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSprocket", ReplyAction="http://tempuri.org/IProductService/GetSprocketResponse")]
        System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> GetSprocketAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SaveSprocket", ReplyAction="http://tempuri.org/IProductService/SaveSprocketResponse")]
        SoaDemo.Services.Common.DataContracts.Product SaveSprocket(SoaDemo.Services.Common.DataContracts.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SaveSprocket", ReplyAction="http://tempuri.org/IProductService/SaveSprocketResponse")]
        System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> SaveSprocketAsync(SoaDemo.Services.Common.DataContracts.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteSprocket", ReplyAction="http://tempuri.org/IProductService/DeleteSprocketResponse")]
        bool DeleteSprocket(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteSprocket", ReplyAction="http://tempuri.org/IProductService/DeleteSprocketResponse")]
        System.Threading.Tasks.Task<bool> DeleteSprocketAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetWidget", ReplyAction="http://tempuri.org/IProductService/GetWidgetResponse")]
        SoaDemo.Services.Common.DataContracts.Product GetWidget(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetWidget", ReplyAction="http://tempuri.org/IProductService/GetWidgetResponse")]
        System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> GetWidgetAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SaveWidget", ReplyAction="http://tempuri.org/IProductService/SaveWidgetResponse")]
        SoaDemo.Services.Common.DataContracts.Product SaveWidget(SoaDemo.Services.Common.DataContracts.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SaveWidget", ReplyAction="http://tempuri.org/IProductService/SaveWidgetResponse")]
        System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> SaveWidgetAsync(SoaDemo.Services.Common.DataContracts.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteWidget", ReplyAction="http://tempuri.org/IProductService/DeleteWidgetResponse")]
        bool DeleteWidget(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteWidget", ReplyAction="http://tempuri.org/IProductService/DeleteWidgetResponse")]
        System.Threading.Tasks.Task<bool> DeleteWidgetAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : SoaDemo.Web.ProductService.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<SoaDemo.Web.ProductService.IProductService>, SoaDemo.Web.ProductService.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SoaDemo.Services.Common.DataContracts.Product GetCog(int id) {
            return base.Channel.GetCog(id);
        }
        
        public System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> GetCogAsync(int id) {
            return base.Channel.GetCogAsync(id);
        }
        
        public SoaDemo.Services.Common.DataContracts.Product SaveCog(SoaDemo.Services.Common.DataContracts.Product product) {
            return base.Channel.SaveCog(product);
        }
        
        public System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> SaveCogAsync(SoaDemo.Services.Common.DataContracts.Product product) {
            return base.Channel.SaveCogAsync(product);
        }
        
        public bool DeleteCog(int id) {
            return base.Channel.DeleteCog(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCogAsync(int id) {
            return base.Channel.DeleteCogAsync(id);
        }
        
        public SoaDemo.Services.Common.DataContracts.Product GetSprocket(int value) {
            return base.Channel.GetSprocket(value);
        }
        
        public System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> GetSprocketAsync(int value) {
            return base.Channel.GetSprocketAsync(value);
        }
        
        public SoaDemo.Services.Common.DataContracts.Product SaveSprocket(SoaDemo.Services.Common.DataContracts.Product product) {
            return base.Channel.SaveSprocket(product);
        }
        
        public System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> SaveSprocketAsync(SoaDemo.Services.Common.DataContracts.Product product) {
            return base.Channel.SaveSprocketAsync(product);
        }
        
        public bool DeleteSprocket(int id) {
            return base.Channel.DeleteSprocket(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSprocketAsync(int id) {
            return base.Channel.DeleteSprocketAsync(id);
        }
        
        public SoaDemo.Services.Common.DataContracts.Product GetWidget(int value) {
            return base.Channel.GetWidget(value);
        }
        
        public System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> GetWidgetAsync(int value) {
            return base.Channel.GetWidgetAsync(value);
        }
        
        public SoaDemo.Services.Common.DataContracts.Product SaveWidget(SoaDemo.Services.Common.DataContracts.Product product) {
            return base.Channel.SaveWidget(product);
        }
        
        public System.Threading.Tasks.Task<SoaDemo.Services.Common.DataContracts.Product> SaveWidgetAsync(SoaDemo.Services.Common.DataContracts.Product product) {
            return base.Channel.SaveWidgetAsync(product);
        }
        
        public bool DeleteWidget(int id) {
            return base.Channel.DeleteWidget(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteWidgetAsync(int id) {
            return base.Channel.DeleteWidgetAsync(id);
        }
    }
}
